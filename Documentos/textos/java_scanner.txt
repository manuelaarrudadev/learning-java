ğŸ”¹ Classe File (pacote java.io)
- FunÃ§Ã£o: Representa um arquivo ou diretÃ³rio no sistema de arquivos.
- Uso comum: Criar uma referÃªncia a um arquivo para ser usado na leitura ou escrita.
- Exemplo:
  File arquivo = new File("caminho/do/arquivo.txt");

ğŸ”¹ Classe Scanner (pacote java.util)
- FunÃ§Ã£o: LÃª dados de entrada, como texto de um arquivo ou do teclado.
- Uso comum para leitura de arquivos:
  Scanner leitor = new Scanner(arquivo);
  while (leitor.hasNextLine()) {
      String linha = leitor.nextLine();
      System.out.println(linha);
  }
  leitor.close();
- ObservaÃ§Ã£o: Para usar o Scanner com File, Ã© necessÃ¡rio tratar exceÃ§Ãµes.

ğŸ”¹ Classe IOException (pacote java.io)
- FunÃ§Ã£o: Representa erros de entrada/saÃ­da, como problemas ao abrir ou ler arquivos.
- Uso: Deve ser tratada com try-catch ou lanÃ§ada com throws.
- Exemplo:
  try {
      File arquivo = new File("dados.txt");
      Scanner leitor = new Scanner(arquivo);
      // leitura aqui...
      leitor.close();
  } catch (IOException e) {
      System.out.println("Erro ao ler o arquivo: " + e.getMessage());
  }

âœ… Resumo geral:
- File: aponta para o arquivo.
- Scanner: lÃª o conteÃºdo linha por linha.
- IOException: trata possÃ­veis erros de leitura.
